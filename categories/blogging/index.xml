<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>blogging on Bjartek</title><link>/categories/blogging/</link><description>Recent content in blogging on Bjartek</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright &amp;copy; 2021 - Bjarte Karlsen</copyright><lastBuildDate>Tue, 30 Mar 2021 22:03:48 +0200</lastBuildDate><atom:link href="/categories/blogging/index.xml" rel="self" type="application/rss+xml"/><item><title>Flow Intro</title><link>/posts/flow-intro/</link><pubDate>Tue, 30 Mar 2021 22:44:21 +0200</pubDate><guid>/posts/flow-intro/</guid><description>&lt;p>Last summer i joined &lt;a href="https://medium.com/dapperlabs/open-world-builders-free-virtual-blockchain-bootcamp-cefe7f0ccb9f">Open World Builders&lt;/a> to expand my horizons and find out what blockchain/crypto was all about. I started with reading the &lt;a href="https://www.onflow.org/technical-paper">technical papers&lt;/a> for flow and liked that the blockchain was &lt;a href="https://en.wikipedia.org/wiki/Proof_of_stake">PoS&lt;/a> and that it had its own novel programming language &lt;a href="https://github.com/onflow/cadence">Cadence&lt;/a> that was &lt;a href="https://medium.com/dapperlabs/resource-oriented-programming-bee4d69c8f8e">resource oriented&lt;/a>.&lt;/p>&lt;p>During OWB i became part of team23 that became &lt;a href="http://github.com/versus-flow">versus&lt;/a>. We are currently in the process of launching the concept live on mainnet these days.&lt;/p>&lt;p>In order to help me develop with sanity on flow I developed tooling because I found the status-quo there lacking. &lt;a href="https://github.com/bjartek/go-with-the-flow">go-with-the-flow&lt;/a> was born after collaboration with 0xAlchemist.&lt;/p>&lt;p>After beeing part of the flow community since last summer I find it open and helpful. As a long time developer my twitter feed is flooded with messages like &amp;lsquo;block-chains are good for nothing&amp;rsquo;, well I kinda want to explore more myself and find out if there are some things it can be used for.&lt;/p>&lt;p>One aspect of flow that fascinates me is that you can make an API eternal. As eternal as the blockchain that it lives on that is. If you publish an API to flow and revoke the key that can change it, you basically have a stable API that will live there forever. I find that capacity something that is useful. If you combine that with storing metadata and content on the blockchain itself well then you have a &lt;code>#SODA&lt;/code>. Serverless OnChainData Distributed Application. And application that does not have a traditional backend but resides only on the blockchain. Where all clients are non-custodial and are treated the same.&lt;/p>&lt;p>The flow community hangs out at discord so come join us if you like and explore for yourself what it is about.&lt;/p></description></item><item><title>Blogging with Puml</title><link>/posts/puml/</link><pubDate>Tue, 30 Mar 2021 22:03:48 +0200</pubDate><guid>/posts/puml/</guid><description>&lt;p>PlantUML is another passion of mine for making diagrams. As you might have realised I like working with things that are ascii text and not WYSIWYG.&lt;/p>&lt;p>Here is an example of a image that is generated using github actions. The PUML file resides in &lt;code>static&lt;/code> in this repo and it generates a png when the site is built.&lt;/p>&lt;figure class="mid"> &lt;img src="/k8s.png"/> &lt;/figure></description></item><item><title>Blogging with code</title><link>/posts/code/</link><pubDate>Tue, 30 Mar 2021 21:15:23 +0200</pubDate><guid>/posts/code/</guid><description>&lt;p>When writing a technical blog you often want to include code snippts inside your blog posts, however you do not want to have to do tedious copy and paste between your actual code and the blog posts. Also you want to ensure that your code actually compiles. There is nothing more annoying then code samples that does not compile.&lt;/p>&lt;p>In order to cope with this I have crated a &lt;code>shortcode&lt;/code> &lt;a href="https://raw.githubusercontent.com/bjartek/bjartek.github.com/main/layouts/shortcodes/code.html#">code&lt;/a> for hugo that allows me to&lt;/p>&lt;ul>&lt;li>read a file with a given &lt;code>file&lt;/code> from the filsystem&lt;/li>&lt;li>optional only read from &lt;code>start&lt;/code> to &lt;code>end&lt;/code>&lt;/li>&lt;li>highlight is as the extension of the file, or optionaly as &lt;code>language&lt;/code>&lt;/li>&lt;li>show line numbers&lt;/li>&lt;li>optionaly highlight some &lt;code>hl_lines&lt;/code> line numbers&lt;/li>&lt;li>works with chroma build in styling (not highlightjs)&lt;/li>&lt;/ul>&lt;p>The shortcode`s code is as follows: (using the shortcode to show itself)&lt;/p>&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7&lt;/span>&lt;span style="display:block;width:100%;background-color:#3c3d38">&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8&lt;/span>&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">{{ $fileName := .Get &amp;#34;file&amp;#34; }}{{ $extension := path.Ext $fileName }}{{ $extension := replace $extension &amp;#34;.&amp;#34; &amp;#34;&amp;#34; }}{{ $lang := default $extension (.Get &amp;#34;language&amp;#34;) }}{{ $file := $fileName | readFile }}&lt;span style="display:block;width:100%;background-color:#3c3d38">{{ $highlight := .Get &amp;#34;hl_lines&amp;#34; | printf &amp;#34;hl_lines=[%s],&amp;#34; }}&lt;/span>{{ $start := 1 }}{{ if .Get &amp;#34;start&amp;#34; }} {{ $start := .Get &amp;#34;start&amp;#34; | int }} {{ $end := .Get &amp;#34;end&amp;#34; | int }} {{ $length := sub $end $start }} {{/* Splitting content by newline */}} {{ $file := split $file &amp;#34;\n&amp;#34; }} {{/* Limit the array/slice, start from 2nd item then grab all first 3 item */}} {{ $file := first $length (after $start $file) }} {{/* Delimit by newline */}} {{ $file := delimit $file &amp;#34;\n&amp;#34; }}{{ end }}{{ (print &amp;#34;```&amp;#34; $lang &amp;#34; {linenos=table,&amp;#34; $highlight &amp;#34;linenostart=&amp;#34; $start &amp;#34; }\n&amp;#34; $file &amp;#34;```&amp;#34;) | safeHTML }}&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>&lt;/div>&lt;/div></description></item><item><title>Blogging</title><link>/posts/blogging/</link><pubDate>Tue, 30 Mar 2021 21:13:23 +0200</pubDate><guid>/posts/blogging/</guid><description>&lt;p>I decided to start up blogging again. My eyes have long been on &lt;a href="http://gohugo.io">hugo&lt;/a> as a blogging plattform.&lt;/p>&lt;p>My needs for blogging are:&lt;/p>&lt;ul>&lt;li>blog showing actual syntax highligheten code&lt;/li>&lt;li>blog using plantuml diagrams&lt;/li>&lt;li>blog using markdown&lt;/li>&lt;/ul>&lt;p>Hugo makes all of that possible although plantuml integration does not look to be as smooth as I want yes. More on that later.&lt;/p>&lt;p>I struggled for a long time finding a theme I like, for now I am kiera, but not sure it will stay that way. Needs for theme are:&lt;/p>&lt;ul>&lt;li>fast&lt;/li>&lt;li>responsive&lt;/li>&lt;li>syntax highlighting using chroma (not highlightjs) since i want hl_lines and table linenumbers&lt;/li>&lt;li>simple&lt;/li>&lt;/ul></description></item></channel></rss>